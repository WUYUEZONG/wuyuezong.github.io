<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MutableCopy on a half fish</title><link>/tags/mutablecopy/</link><description>Recent content in MutableCopy on a half fish</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Mon, 14 Nov 2022 16:06:23 +0800</lastBuildDate><atom:link href="/tags/mutablecopy/index.xml" rel="self" type="application/rss+xml"/><item><title>Copy &amp; MutableCopy</title><link>/oc/copy-mutablecopy/</link><pubDate>Mon, 14 Nov 2022 16:06:23 +0800</pubDate><guid>/oc/copy-mutablecopy/</guid><description> copy 是复制出不可变对象 mutableCopy 是复制出可变对象； 复制出来的对象互不影响。 copy 复制不可变对象属于浅拷贝（浅拷贝就只是地址拷贝） copy 复制可变对象属于深拷贝（需要复制出一份不可变对象，以免之前可变对象变更影响复制出来的对象） mutableCopy 属于深拷贝（重新申请一份内存和指针） - (void)viewDidLoad { [super viewDidLoad]; NSArray * arr = @[@1, @2]; NSArray *arrCopy = [arr copy]; NSMutableArray * arrMCopy = [arr mutableCopy]; [arrMCopy addObject:@3]; NSLog(@&amp;#34;%p, %p, %p&amp;#34;, arr, arrCopy, arrMCopy); NSMutableArray * marr = [NSMutableArray arrayWithArray:arr]; NSArray *marrCopy = [marr copy]; NSMutableArray * marrMCopy = [marr mutableCopy]; NSLog(@&amp;#34;%p, %p, %p&amp;#34;, marr, marrCopy, marrMCopy); } copy mutableCopy NSString NSString NSMutableString NSMutableString NSString NSMutableString NSArray NSArray NSMutableArray NSMutableArray NSArray NSMutableArray NSDictionary NSDictionary NSMutableDictionary NSMutableDictionary NSDictionary NSMutableDictionary</description></item></channel></rss>