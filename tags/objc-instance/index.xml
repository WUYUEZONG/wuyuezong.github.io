<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Objc Instance on a half fish</title><link>/tags/objc-instance/</link><description>Recent content in Objc Instance on a half fish</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Mon, 14 Nov 2022 16:10:35 +0800</lastBuildDate><atom:link href="/tags/objc-instance/index.xml" rel="self" type="application/rss+xml"/><item><title>Objc Instance</title><link>/oc/objc-instance/</link><pubDate>Mon, 14 Nov 2022 16:10:35 +0800</pubDate><guid>/oc/objc-instance/</guid><description>oc对象 在内存中存储的东西 instance isa, _property(value) class isa, property, function, protocol, _property, superclass meta-class isa, superclass, class function instance对象（实例对象）> instance对象（实例对象） # // obj1，obj2 是NSObject的instance对象（实例对象） // 他们不同的两个对象，分别占据着两个不同的内存。 NSObject *obj1 = [[NSObject alloc] init]; NSObject *obj2 = [[NSObject alloc] init]; instance对象在内存中存储的信息包括> instance对象在内存中存储的信息包括 # isa指针 其他成员变量（这里指的是变量的值，比如变量age = 4，存储这个4) class对象（类对象）> class对象（类对象） # // obj1，obj2 是NSObject的instance对象（实例对象） // 他们不同的两个对象，分别占据着两个不同的内存。 NSObject *obj1 = [[NSObject alloc] init]; NSObject *obj2 = [[NSObject alloc] init]; // objClass1 ~ objClass5 都是NSObject的class对象（类对象） // 他们是同一个对象，每个类在内存中有且只有一个class对象 Class objClass1 = [obj1 class]; Class objClass2 = [obj2 class]; Class objClass3 = [NSObject class]; Class objClass4 = object_getClass(obj1); Class objClass5 = object_getClass(obj2); class对象在内存中存储的信息包括> class对象在内存中存储的信息包括 # isa指针 superclass指针 类的属性信息（@property）、类的对象方法信息（instance method） 类的协议信息（protocol）、类的成员变量信息（ivar，这里主要是变量名不会发生改变的信息，变量类型） meta-class对象（元类对象）> meta-class对象（元类对象） # // objMetaClass 是NSObject的meta-class对象（元类对象） // 每个类在内存中有且只有一个meta-class对象 Class objMetaClass = object_getClass([NSObject class]); // runtime api meta-class对象和class对象的内存结构是一样的，只是用途不一样> meta-class对象和class对象的内存结构是一样的，只是用途不一样 # isa指针 superclass指针 类的类方法信息（class method） &amp;hellip; 注意> 注意 # //objectClass是class对象，并不是meta-class对象 Class objClass = [[NSObject class] class]; // 查看Class是否是meta-class #import &amp;lt;objc/runtime.</description></item></channel></rss>