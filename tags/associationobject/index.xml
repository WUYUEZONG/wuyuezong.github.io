<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AssociationObject on a half fish</title><link>/tags/associationobject/</link><description>Recent content in AssociationObject on a half fish</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Thu, 30 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/associationobject/index.xml" rel="self" type="application/rss+xml"/><item><title>AssociationObject</title><link>/posts/oc/association-object/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>/posts/oc/association-object/</guid><description>AssociationObject关联对象的原理> AssociationObject关联对象的原理 # 实现关联对象技术的核心对象有
AssociationsManager AssociationsHashMap ObjectAssociationMap ObjcAssociation // 关系伪代码 class AssociationsManager { static AssociationsHashMap *_map; }; class AssociationsHashMap: public unordered_map&amp;lt;disguised_ptr_t, ObjectAssociationMap&amp;gt; class ObjectAssociationMap: public std::map&amp;lt;void *, ObjcAssociationMap&amp;gt; class ObjcAssociationMap { uintptr_t _policy; id _value; }; 关联对象的结构> 关联对象的结构 # 关联对象不是存储在被关联对象本身的内存中 关联对象存储在全局的统一的一个AssociationsManager中 设置关联对象为nil，就相当于是移除关联对象 class property AssociationsManager _map: AssociationsHashMap AssociationsHashMap @{disguised_ptr_t: ObjectAssociationMap} ObjectAssociationMap @{void*: ObjcAssociation} ObjcAssociation values OBJC_ASSOCIATION_ASSIGN OBJC_ASSOCIATION_RETAIN_NONATOMIC OBJC_ASSOCIATION_COPY_NONATOMIC OBJC_ASSOCIATION_RETAIN OBJC_ASSOCIATION_COPY AssociationObject关联对象的使用> AssociationObject关联对象的使用 # 关联对象常用API> 关联对象常用API # 添加关联对象</description></item></channel></rss>