<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flexbox on a half fish</title><link>/tags/flexbox/</link><description>Recent content in Flexbox on a half fish</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 30 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/flexbox/index.xml" rel="self" type="application/rss+xml"/><item><title>React Native Flexbox</title><link>/posts/rn-flex-layout/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>/posts/rn-flex-layout/</guid><description>这里只是个人学习对官方的Flexbox布局的简单总结以及备忘，内容并不全面，深入学习建议阅读官方文档。
推荐阅读官网 “使用Flexbox布局”
Flex> Flex # flex属性决定元素在主轴上如何填满可用区域。整个区域会根据每个元素设置的 flex属性值被分割成多个部分。
Flex Direction> Flex Direction # 在组件的style中指定flexDirection可以决定布局的主轴。子元素是应该沿着水平轴(row)方向排列，还是沿着竖直轴(column)方向排列呢？默认值是竖直轴(column)方向。
column | 从上到下 row | 从左到右 column-reverse | 从下到上 row-reverse | 从右到左 Layout Direction> Layout Direction # ltr | 从左到右 rtl | 从右到左 justifyContent> justifyContent # 在组件的 style 中指定justifyContent可以决定其子元素沿着主轴的排列方式。子元素是应该靠近主轴的起始端还是末尾段分布呢？亦或应该均匀分布？可用的选项有：</description></item></channel></rss>